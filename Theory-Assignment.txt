-> What is `NPM`?
  NPM is a package manager and installer. It contains alot of code packages. NPM is installed with Node.js. This means that you have to install Node.js to get npm installed on your computer. All npm packages are defined in files called package.json.

-> What is `Parcel/Webpack`? Why do we need it?
  Parcel and webpack are the bundlers used mostly for JavaScript or Typescript code that helps you to minify, clean, and make your code compact so that it becomes easier to send a request or receive the response from the server when it usually takes you to transfer multiple files without using any bundler for loading the page of your application. Both of these bundlers substantially reduce the time it takes for the transfer of data and files to the server from the application. Along with that both bundlers parcel and webpack remove the unnecessary comments, new lines, any kind of block delimiters, and white spaces while the functionality of the code remains unchanged.

-> What is `.parcel-cache`
  cache folder or parcel-cache in parcel stores information about your project when parcel builds it, so that when it rebuilds, it doesn't have to re-parse and re-analyze everything from scratch. It's a key reason why parcel can be so fast in development mode.

-> What is `npx` ?
  NPX stands for Node Package Execute and it comes with NPM. It is npm package runner that can execute any package that you want from the npm registry without even installing that package.

-> What is difference between `dependencies` vs `devDependencies`
  "dependencies" : Packages required by your application in production. 
  "devDependencies" : Packages that are only needed for local development and testing.

-> What is Tree Shaking?
  Tree shaking is a term commonly used within a JavaScript context to describe the removal of dead code. In modern JavaScript applications, we use module bundlers to automatically remove dead code when bundling multiple JavaScript files into single files. This is important for preparing code that is production ready, for example with clean structures and minimal file size.

-> What is Hot Module Replacement?
  Hot Module Replacement (HMR) exchanges, adds, or removes modules while an application is running, without a full reload. This can significantly speed up development in a few ways: Retain application state which is lost during a full reload. Save valuable development time by only updating what's changed

-> List down your favourite 5 superpowers of Parcel and describe any 3 of them in your
   own words.
  Hot Module Replacement (HMR), Files Watcher, Bundling, Minifying, Cleaning Code, DEV & prod build, Super fast build algorithms, Image Optimization, Caching while development, Code Compression, Old browser Support, 'HTTPS' on Dev, Manages port numbers, Zero Config Bundler, Transitive dependencies.

-> What is `.gitignore`? What should we add and not add into it?
  ".gitignore" is a file that contains file or folder names that should be ignored while pushing onto Git. The code that can be regenerated onto the server should be added to gitignore (ex: node_modules, parcel,.DS_Store, Dist folder). Only the things that are not regenerated should be excluded from git.  
  
-> What is the difference between `package.json` and `package-lock.json`
  In Node.js, package.json is a versioning file used to install multiple packages in your project. As you initialize your node application, you will see three files installed in your app that is node_modules, package.json, and package.lock.json.
  - Package.json file contains metadata about the project and also the functional dependencies that is required by the application.
  - Package.lock.json is created for locking the dependency with the installed version. It will install the exact latest version of that package in your application and save it in package.json

-> Why should I not modify `package-lock.json`?
  It is a generated file and is not designed to be manually edited. Its purpose is to track the entire tree of dependencies (including dependencies of dependencies) and the exact version of each dependency. You should commit package-lock. json to your code repository.

-> What is `node_modules` ? Is it a good idea to push that on git?
  node_modules contains all the source code of the dependencies that comes along with npm. It is a huge folder and has huge amount of data and it will take forever to upload. This node modules can be re generated onto the server if we have a package.json file specified. So it is not recommended to push this onto git.

-> What is the `dist` folder?
  The /dist folder contains the minimized version of the source code. The code present in the /dist folder is actually the code which is used on production web applications. Along with the minified code, the /dist folder also comprises of all the compiled modules that may or may not be used with other systems.

-> What is `browserlists`
  Browserslist is a tool that allows specifying which browsers should be supported in your frontend app by specifying "queries" in a config file. It's used by frameworks/libraries such as React, Angular and Vue, but it's not limited to them.